name: Build

on:
  push:
    branches:
      - main # 当代码推送到 main 分支时触发

env:
  # 替换为你需要安装的 Vulkan SDK 版本号
  # 请访问 LunarG 官网 (https://sdk.lunarg.com/sdk/download/) 确认最新的或你需要的版本号
  VULKAN_SDK_VERSION: 1.3.275.0
  # Vulkan SDK 的安装目录，保持默认或根据需要修改
  VULKAN_SDK_INSTALL_DIR: C:\VulkanSDK

jobs:
  build:
    runs-on: windows-latest # 推荐使用 Windows Runner 来构建 Vulkan 项目

    steps:
      - name: 拉取项目
        uses: actions/checkout@v4

      - name: 下载 Vulkan SDK 安装程序
        run: |
          # 确保 Vulkan SDK 的下载链接与你 VULKAN_SDK_VERSION 匹配
          # 请核实 LunarG 官网下载链接的格式是否为 "VulkanSDK-${版本号}-Installer.exe"
          $VulkanSdkUrl = "https://sdk.lunarg.com/sdk/download/${{ env.VULKAN_SDK_VERSION }}/windows/VulkanSDK-${{ env.VULKAN_SDK_VERSION }}-Installer.exe"
          Write-Host "Downloading Vulkan SDK from: $VulkanSdkUrl"
          Invoke-WebRequest -Uri $VulkanSdkUrl -OutFile VulkanSDK-Installer.exe
        shell: powershell # 使用 PowerShell 来下载文件

      - name: 安装 Vulkan SDK
        run: |
          # 执行 Vulkan SDK 的静默安装
          # /S 表示静默安装，/D 指定安装目录
          # 请注意，某些版本的安装程序参数可能略有不同，如遇问题请查阅 LunarG 文档
          Start-Process -FilePath "VulkanSDK-Installer.exe" -ArgumentList "/S", "/D=${{ env.VULKAN_SDK_INSTALL_DIR }}" -Wait
        shell: powershell

      - name: 设置 VULKAN_SDK 环境变量
        run: |
          # 确保 VULKAN_SDK 环境变量指向 SDK 的正确根目录
          # 有些 Vulkan SDK 安装后会在指定目录下再创建一层版本号目录，例如 C:\VulkanSDK\1.3.275.0
          # 如果你的安装器行为不同，例如直接安装到 C:\VulkanSDK，则需要调整此行
          echo "VULKAN_SDK=${{ env.VULKAN_SDK_INSTALL_DIR }}\${{ env.VULKAN_SDK_VERSION }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: powershell

      - name: 添加 Vulkan SDK Bin 目录到 PATH
        run: |
          # 将 Vulkan SDK 的 bin 目录添加到系统 PATH，以便命令行可以找到 Vulkan 工具和 DLLs
          # 同样，路径拼接可能需要根据你的安装器行为进行调整
          echo "$((Get-Item -Path "${{ env.VULKAN_SDK_INSTALL_DIR }}\${{ env.VULKAN_SDK_VERSION }}\bin").FullName)" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        shell: powershell

      - name: (可选) 验证 Vulkan SDK 安装
        run: |
          # 运行 vulkaninfo 命令来检查 Vulkan SDK 是否成功安装并配置
          # 如果这一步报错，通常意味着 SDK 安装或环境变量设置有问题
          vulkaninfo --summary
        shell: powershell
        continue-on-error: true # 即使验证失败也允许继续，方便调试

      - name: 配置 x64 编译器
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: 构建
        run: |
          # 构建命令，如果你的项目构建依赖 VULKAN_SDK 变量，此变量已在之前步骤中设置
          # MSBuild 通常会自动识别环境变量，无需额外传递参数，除非你的项目有特殊配置
          msbuild /p:Configuration=Release /p:Platform=x64
          dir x64/Release # 列出构建产物，方便检查

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: out.dll # 上传产物的名称
          path: x64/Release/UniversalHookX.dll # 替换为你的实际输出路径和文件名
          retention-days: 30 # 保留天数
